{"ast":null,"code":"// API Configuration and Utilities\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Token management\nconst getToken = () => localStorage.getItem('authToken');\nconst setToken = token => localStorage.setItem('authToken', token);\nconst removeToken = () => localStorage.removeItem('authToken');\n\n// API instance with interceptors\nconst apiCall = async (endpoint, options = {}) => {\n  const token = getToken();\n  const defaultHeaders = {\n    'Content-Type': 'application/json'\n  };\n  if (token) {\n    defaultHeaders['Authorization'] = `Bearer ${token}`;\n  }\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      ...options,\n      headers: {\n        ...defaultHeaders,\n        ...options.headers\n      }\n    });\n    if (response.status === 401) {\n      // Token expired or invalid\n      removeToken();\n      window.location.href = '/';\n      throw new Error('Authentication failed');\n    }\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.detail || 'API request failed');\n    }\n\n    // Handle empty responses\n    const text = await response.text();\n    return text ? JSON.parse(text) : {};\n  } catch (error) {\n    console.error('API Error:', error);\n    throw error;\n  }\n};\n\n// API endpoints\nexport const api = {\n  // Authentication\n  login: async (username, password, dashboardType) => {\n    const response = await apiCall('/admin/login/', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password,\n        dashboard_type: dashboardType\n      })\n    });\n    if (response.access_token) {\n      setToken(response.access_token);\n    }\n    return response;\n  },\n  logout: () => {\n    removeToken();\n  },\n  // Fraud Detection\n  detectFraud: async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return await apiCall('/detect/', {\n      method: 'POST',\n      headers: {\n        // Don't set Content-Type for FormData\n      },\n      body: formData\n    });\n  },\n  // Admin Dashboard\n  getAdminData: async () => {\n    return await apiCall('/admin/data/');\n  },\n  updateTransactionStatus: async (transactionId, action) => {\n    return await apiCall('/admin/transaction-action/', {\n      method: 'POST',\n      body: JSON.stringify({\n        transaction_id: transactionId,\n        action: action\n      })\n    });\n  },\n  generateReport: async () => {\n    const response = await fetch(`${API_BASE_URL}/admin/generate-report/`, {\n      headers: {\n        'Authorization': `Bearer ${getToken()}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to generate report');\n    }\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `fraud_report_${new Date().toISOString().split('T')[0]}.pdf`;\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n    window.URL.revokeObjectURL(url);\n  },\n  // MANIT Dashboard\n  getManitData: async () => {\n    return await apiCall('/manit/data/');\n  },\n  uploadManitData: async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return await apiCall('/manit/upload/', {\n      method: 'POST',\n      headers: {\n        // Don't set Content-Type for FormData\n      },\n      body: formData\n    });\n  },\n  updateManitStatus: async (transactionId, status) => {\n    return await apiCall('/manit/update-status/', {\n      method: 'POST',\n      body: JSON.stringify({\n        transaction_id: transactionId,\n        status: status\n      })\n    });\n  },\n  generateManitReport: async () => {\n    const response = await fetch(`${API_BASE_URL}/manit/generate-report/`, {\n      headers: {\n        'Authorization': `Bearer ${getToken()}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to generate report');\n    }\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `manit_report_${new Date().toISOString().split('T')[0]}.pdf`;\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n    window.URL.revokeObjectURL(url);\n  }\n};\nexport default api;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","getToken","localStorage","getItem","setToken","token","setItem","removeToken","removeItem","apiCall","endpoint","options","defaultHeaders","response","fetch","headers","status","window","location","href","Error","ok","error","json","detail","text","JSON","parse","console","api","login","username","password","dashboardType","method","body","stringify","dashboard_type","access_token","logout","detectFraud","file","formData","FormData","append","getAdminData","updateTransactionStatus","transactionId","action","transaction_id","generateReport","blob","url","URL","createObjectURL","link","document","createElement","download","Date","toISOString","split","appendChild","click","remove","revokeObjectURL","getManitData","uploadManitData","updateManitStatus","generateManitReport"],"sources":["C:/Users/sahan/Desktop/radheradhe/FraudShield/frontend/src/utils/api.js"],"sourcesContent":["// API Configuration and Utilities\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n// Token management\r\nconst getToken = () => localStorage.getItem('authToken');\r\nconst setToken = (token) => localStorage.setItem('authToken', token);\r\nconst removeToken = () => localStorage.removeItem('authToken');\r\n\r\n// API instance with interceptors\r\nconst apiCall = async (endpoint, options = {}) => {\r\n  const token = getToken();\r\n  \r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  \r\n  if (token) {\r\n    defaultHeaders['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  \r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n      ...options,\r\n      headers: {\r\n        ...defaultHeaders,\r\n        ...options.headers,\r\n      },\r\n    });\r\n    \r\n    if (response.status === 401) {\r\n      // Token expired or invalid\r\n      removeToken();\r\n      window.location.href = '/';\r\n      throw new Error('Authentication failed');\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.detail || 'API request failed');\r\n    }\r\n    \r\n    // Handle empty responses\r\n    const text = await response.text();\r\n    return text ? JSON.parse(text) : {};\r\n  } catch (error) {\r\n    console.error('API Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// API endpoints\r\nexport const api = {\r\n  // Authentication\r\n  login: async (username, password, dashboardType) => {\r\n    const response = await apiCall('/admin/login/', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n        dashboard_type: dashboardType,\r\n      }),\r\n    });\r\n    \r\n    if (response.access_token) {\r\n      setToken(response.access_token);\r\n    }\r\n    \r\n    return response;\r\n  },\r\n  \r\n  logout: () => {\r\n    removeToken();\r\n  },\r\n  \r\n  // Fraud Detection\r\n  detectFraud: async (file) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    return await apiCall('/detect/', {\r\n      method: 'POST',\r\n      headers: {\r\n        // Don't set Content-Type for FormData\r\n      },\r\n      body: formData,\r\n    });\r\n  },\r\n  \r\n  // Admin Dashboard\r\n  getAdminData: async () => {\r\n    return await apiCall('/admin/data/');\r\n  },\r\n  \r\n  updateTransactionStatus: async (transactionId, action) => {\r\n    return await apiCall('/admin/transaction-action/', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        transaction_id: transactionId,\r\n        action: action,\r\n      }),\r\n    });\r\n  },\r\n  \r\n  generateReport: async () => {\r\n    const response = await fetch(`${API_BASE_URL}/admin/generate-report/`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${getToken()}`,\r\n      },\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to generate report');\r\n    }\r\n    \r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `fraud_report_${new Date().toISOString().split('T')[0]}.pdf`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(url);\r\n  },\r\n  \r\n  // MANIT Dashboard\r\n  getManitData: async () => {\r\n    return await apiCall('/manit/data/');\r\n  },\r\n  \r\n  uploadManitData: async (file) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    return await apiCall('/manit/upload/', {\r\n      method: 'POST',\r\n      headers: {\r\n        // Don't set Content-Type for FormData\r\n      },\r\n      body: formData,\r\n    });\r\n  },\r\n  \r\n  updateManitStatus: async (transactionId, status) => {\r\n    return await apiCall('/manit/update-status/', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        transaction_id: transactionId,\r\n        status: status,\r\n      }),\r\n    });\r\n  },\r\n  \r\n  generateManitReport: async () => {\r\n    const response = await fetch(`${API_BASE_URL}/manit/generate-report/`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${getToken()}`,\r\n      },\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to generate report');\r\n    }\r\n    \r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `manit_report_${new Date().toISOString().split('T')[0]}.pdf`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(url);\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}