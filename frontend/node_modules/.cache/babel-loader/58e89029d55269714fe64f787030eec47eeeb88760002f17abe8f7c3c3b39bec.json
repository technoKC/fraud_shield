{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91933\\\\OneDrive\\\\Documents\\\\FraudShieldrepo\\\\frontend\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// LoginPage.js\nimport React from 'react';\nimport { auth, provider, signInWithPopup } from './firebase';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate(); // hook to programmatically navigate\n\n  const handleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      console.log(\"‚úÖ Logged in:\", user.displayName);\n\n      // üëâ Redirect to homepage\n      navigate('/home'); // change to '/' if your homepage route is '/'\n    } catch (error) {\n      console.error(\"‚ùå Login failed:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","auth","provider","signInWithPopup","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","handleLogin","result","user","console","log","displayName","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91933/OneDrive/Documents/FraudShieldrepo/frontend/src/components/LoginPage.js"],"sourcesContent":["// LoginPage.js\r\nimport React from 'react';\r\nimport { auth, provider, signInWithPopup } from './firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate(); // hook to programmatically navigate\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n      console.log(\"‚úÖ Logged in:\", user.displayName);\r\n      \r\n      // üëâ Redirect to homepage\r\n      navigate('/home'); // change to '/' if your homepage route is '/'\r\n    } catch (error) {\r\n      console.error(\"‚ùå Login failed:\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login Page</h1>\r\n      <button onClick={handleLogin}>Sign in with Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,YAAY;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMR,eAAe,CAACF,IAAI,EAAEC,QAAQ,CAAC;MACpD,MAAMU,IAAI,GAAGD,MAAM,CAACC,IAAI;MACxBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAACG,WAAW,CAAC;;MAE7C;MACAN,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACjD;EACF,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA;MAAQiB,OAAO,EAAEb,WAAY;MAAAQ,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACd,EAAA,CAtBID,SAAS;EAAA,QACIH,WAAW;AAAA;AAAAoB,EAAA,GADxBjB,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}